@model curator.Models.CodeSnippet

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>CodeSnippet</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <!--Get the title-->
        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <!--Get the description-->
        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <!--Get the code-->
        <div class="form-group">
            @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
            </div>
        </div>

        <!--Get the Language-->
        <script>
            window.onload = function () {
                var options = [];
                $.getJSON("/JsonData/Languages.json", function (data) {

                    $.each(data, function (key, val) {
                       options.push("<option id='" + key + "'>" + val + "</option>");
                    });

                    $("#theSelect").html(options.join(""));
                });
                
            }
            
        </script>
        <div class="form-group">
            


            @Html.LabelFor(model => model.Language, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @Html.DropDownListFor(model => model.Language, new SelectList(
                  new List<Object>{
                       new { value = "Java" , text = "Java"  },
                       new { value = "JavaScript" , text = "JavaScript" },
                       new { value = "C#" , text = "C#"}
                    },
                  "value",
                  "text",
                   2))
                
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
